{"version":3,"sources":["pages/styles.js","img/Logo original RGB.png","pages/layout/components/styles.js","pages/layout/components/header.js","pages/layout/index.js","img/main_bg.jpg","pages/home/calendar/components/header.js","pages/home/calendar/components/daysOfWeek.js","pages/home/calendar/components/cells.js","pages/home/calendar/index.js","pages/home/styles.js","pages/home/index.js"],"names":["darkFontColour","secondaryColour","Container","styled","div","module","exports","Wrapper","Main","Logo","img","Nav","nav","Header","src","logo","alt","to","Layout","props","children","setCurrentDate","currentDate","className","onClick","subMonths","format","addMonths","DaysOfWeek","days","startDate","startOfWeek","i","push","key","addDays","connect","state","modal","setModalData","changeModalVisibility","data","selectedDate","setSelectedDate","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","day","formattedDate","onDateClick","today","Date","cloneDay","isSameMonth","isSameDay","toDate","Calendar","useState","SectionTwo","bg","SectionOne","Text","Modal","lazy","Home"],"mappings":"gXAEA,IACMA,EAAiB,UACjBC,EAAkB,UAElBC,EAAYC,IAAOC,IAAV,IAJQ,Y,mBCFvBC,EAAOC,QAAU,IAA0B,+C,w6CCI3C,IAAMC,EAAUJ,IAAOC,IAAV,KAUPI,EAAOL,YAAOD,IAAPC,CAAH,KASJM,EAAON,IAAOO,IAAV,KAQJC,EAAMR,IAAOS,IAAV,IAcMZ,IASAC,K,iBC1BAY,EAtBA,WACb,OACE,gCACE,kBAACN,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAMK,IAAKC,IAAMC,IAAI,SACrB,kBAACL,EAAD,KACE,4BACE,4BACE,kBAAC,IAAD,CAAMM,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,mB,uICJDC,IATA,SAACC,GACd,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACCA,EAAMC,WAJb,IAWMb,EAAUJ,IAAOC,IAAV,M,wCChBbC,EAAOC,QAAU,IAA0B,qC,2GCkC5BO,EA9BA,SAAC,GAAqC,IAAnCQ,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAQhC,OACE,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,OAAOC,QANV,WAChBH,EAAeI,YAAUH,EAAa,MAM/B,MAGL,yBAAKC,UAAU,qBACb,kCAAQG,YAAOJ,EAfF,aAeb,MAEF,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,OAAOC,QAjBV,WAChBH,EAAeM,YAAUL,EAAa,MAiB/B,Q,gBCHIM,EAjBI,SAAC,GAIlB,IAJuC,IAAnBN,EAAkB,EAAlBA,YAEdO,EAAO,GACTC,EAAYC,YAAYT,GACnBU,EAAI,EAAGA,EAAI,EAAGA,IACrBH,EAAKI,KACH,yBAAKV,UAAU,oBAAoBW,IAAKF,GACrCN,YAAOS,YAAQL,EAAWE,GANd,WAUnB,OAAO,yBAAKT,UAAU,YAAYM,I,wDC2ErBO,eAjBE,SAACC,GAChB,MAAO,CACLC,MAAOD,EAAMC,UAGG,SAAC,GAAD,QAAGA,MAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,sBAA1B,MAAyD,CAC3ED,aAAc,SAACE,GAAD,OAAUF,EAAaE,IACrCD,sBAAuB,kBAAMA,QAUhBJ,EA3ED,SAAC,GAsBb,IAhBK,IALLd,EAKI,EALJA,YACAoB,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAH,EAEI,EAFJA,sBACAD,EACI,EADJA,aAEMK,EAAaC,YAAavB,GAC1BwB,EAAWC,YAAWH,GACtBd,EAAYC,YAAYa,GACxBI,EAAUC,YAAUH,GAEpBI,EAAO,GACTrB,EAAO,GACPsB,EAAMrB,EACNsB,EAAgB,GAEdC,EAAc,SAACF,GACnBR,EAAgBQ,GAChBX,IACAD,EAAab,YAAOyB,EAAK,kBAEpBA,GAAOH,GAAS,CACrB,IADsB,IAAD,WACZhB,GACP,IAAIsB,EAAQ,GACR5B,YAAOyB,EAAK,kBAAoBzB,YAAO,IAAI6B,KAAQ,kBACrDD,EAAQ,SAEVF,EAAgB1B,YAAOyB,EAjBR,MAkBf,IAAMK,EAAWL,EACjBtB,EAAKI,KACH,yBACEV,UAAS,sBACNkC,YAAYN,EAAKP,GAEdc,YAAUP,EAAKT,GAAf,mBACYY,GADZ,UAEGA,GAHH,YAKNpB,IAAKiB,EACL3B,QAAS,kBAAM6B,EAAYM,YAAOH,MAElC,0BAAMjC,UAAU,UAAU6B,GAC1B,0BAAM7B,UAAU,SAGpB4B,EAAMhB,YAAQgB,EAAK,IAvBZnB,EAAI,EAAGA,EAAI,EAAGA,IAAM,IAyB7BkB,EAAKjB,KACH,yBAAKV,UAAU,MAAMW,IAAKiB,GACvBtB,IAGLA,EAAO,GAET,OAAO,yBAAKN,UAAU,QAAQ2B,MC9CjBU,EAjBE,WAAO,IAAD,EACiBC,mBAAS,IAAIN,MAD9B,mBACdjC,EADc,KACDD,EADC,OAEmBwC,mBAAS,IAAIN,MAFhC,mBAEdb,EAFc,KAEAC,EAFA,KAGrB,OACE,yBAAKpB,UAAU,YACb,6BACE,kBAAC,EAAW,CAAEF,iBAAgBC,iBAEhC,6BACE,kBAAC,EAAU,CAAEA,cAAaoB,eAAcC,qBAE1C,6BACE,kBAAC,EAAD,CAAYrB,YAAaA,O,wzCCdjC,IAAMwC,EAAa3D,IAAOC,IAAV,KAmBVI,EAAOL,YAAOD,IAAPC,CAAH,IAEgB4D,KAQpBC,EAAa7D,IAAOC,IAAV,KAQV6D,EAAO9D,IAAOC,IAAV,IAQGH,KC5CPiE,EAAQC,gBAAK,kBAAM,gCA0BVC,UAxBF,WACX,OACE,kBAAC,IAAD,KACE,kBAAC5D,EAAD,KACE,kBAACwD,EAAD,KACE,kBAACC,EAAD,KACE,8CACiB,6BADjB,oBAGA,2DAEE,6BAFF,uBAGE,6BAHF,+BAOJ,kBAACH,EAAD,KACE,kBAAC,EAAD,QAGJ,kBAACI,EAAD","file":"static/js/5.49557870.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst mainFontColour = '#DFDFDF';\r\nconst darkFontColour = '#3D3D3D';\r\nconst secondaryColour = '#FDD000';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-width: 320px;\r\n  color: ${mainFontColour};\r\n`;\r\n\r\nexport { mainFontColour, darkFontColour, secondaryColour, Container };\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo original RGB.89fca7ad.png\";","import styled from 'styled-components';\r\n\r\nimport { secondaryColour, darkFontColour, Container } from '../../styles';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 52px 0 76px 0;\r\n  @media (max-width: 500px) {\r\n    padding: 15px 0 20px 0;\r\n  }\r\n`;\r\nconst Main = styled(Container)`\r\n  height: auto;\r\n  max-width: 1700px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst Logo = styled.img`\r\n  width: 165px;\r\n  height: 50px;\r\n  @media (max-width: 500px) {\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst Nav = styled.nav`\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    @media (max-width: 500px) {\r\n      justify-content: center;\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      color: ${darkFontColour};\r\n      font-size: 28px;\r\n      font-weight: 400;\r\n      position: relative;\r\n    }\r\n    li:hover a::after {\r\n      content: 'â€¢';\r\n      font-size: 50px;\r\n      font-weight: 700;\r\n      color: ${secondaryColour};\r\n      position: absolute;\r\n      left: 40%;\r\n      top: 10%;\r\n    }\r\n    li:first-child {\r\n      padding-right: 70px;\r\n    }\r\n  }\r\n`;\r\nexport { Wrapper, Main, Logo, Nav };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Wrapper, Main, Logo, Nav } from './styles';\r\nimport logo from '../../../img/Logo original RGB.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Wrapper>\r\n        <Main>\r\n          <Logo src={logo} alt='Logo' />\r\n          <Nav>\r\n            <ul>\r\n              <li>\r\n                <Link to='/'>Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/aboutus'>About us</Link>\r\n              </li>\r\n            </ul>\r\n          </Nav>\r\n        </Main>\r\n      </Wrapper>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from './components/header';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      {props.children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1920px;\r\n  min-height: 1080px;\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/media/main_bg.37a75b54.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { format, addMonths, subMonths } from 'date-fns';\r\n\r\nconst Header = ({ setCurrentDate, currentDate }) => {\r\n  const dateFormat = 'MMMM yyyy';\r\n  const nextMonth = () => {\r\n    setCurrentDate(addMonths(currentDate, 1));\r\n  };\r\n  const prevMonth = () => {\r\n    setCurrentDate(subMonths(currentDate, 1));\r\n  };\r\n  return (\r\n    <div className='header row flex-middle'>\r\n      <div className='column col-start'>\r\n        <div className='icon' onClick={prevMonth}>\r\n          {'<'}\r\n        </div>\r\n      </div>\r\n      <div className='column col-center'>\r\n        <span> {format(currentDate, dateFormat)} </span>\r\n      </div>\r\n      <div className='column col-end'>\r\n        <div className='icon' onClick={nextMonth}>\r\n          {'>'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nHeader.propTypes = {\r\n  currentDate: PropTypes.object.isRequired,\r\n  setCurrentDate: PropTypes.func.isRequired,\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { startOfWeek, format, addDays } from 'date-fns';\r\n\r\nconst DaysOfWeek = ({ currentDate }) => {\r\n  const dateFormat = 'EEEEE';\r\n  const days = [];\r\n  let startDate = startOfWeek(currentDate);\r\n  for (let i = 0; i < 7; i++) {\r\n    days.push(\r\n      <div className='column col-center' key={i}>\r\n        {format(addDays(startDate, i), dateFormat)}\r\n      </div>\r\n    );\r\n  }\r\n  return <div className='days row'>{days}</div>;\r\n};\r\n\r\nDaysOfWeek.propTypes = {\r\n  currentDate: PropTypes.object.isRequired,\r\n};\r\nexport default DaysOfWeek;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  format,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  isSameMonth,\r\n  toDate,\r\n  startOfWeek,\r\n  isSameDay,\r\n  endOfWeek,\r\n  addDays,\r\n} from 'date-fns';\r\n\r\nconst Cells = ({\r\n  currentDate,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  changeModalVisibility,\r\n  setModalData,\r\n}) => {\r\n  const monthStart = startOfMonth(currentDate);\r\n  const monthEnd = endOfMonth(monthStart);\r\n  const startDate = startOfWeek(monthStart);\r\n  const endDate = endOfWeek(monthEnd);\r\n  const dateFormat = 'dd';\r\n  const rows = [];\r\n  let days = [];\r\n  let day = startDate;\r\n  let formattedDate = '';\r\n\r\n  const onDateClick = (day) => {\r\n    setSelectedDate(day);\r\n    changeModalVisibility();\r\n    setModalData(format(day, 'MMMM do eeee'));\r\n  };\r\n  while (day <= endDate) {\r\n    for (let i = 0; i < 7; i++) {\r\n      let today = '';\r\n      if (format(day, 'MMMM yyyy dd') === format(new Date(), 'MMMM yyyy dd')) {\r\n        today = 'today';\r\n      }\r\n      formattedDate = format(day, dateFormat);\r\n      const cloneDay = day;\r\n      days.push(\r\n        <div\r\n          className={`column cell ${\r\n            !isSameMonth(day, monthStart)\r\n              ? 'disabled'\r\n              : isSameDay(day, selectedDate)\r\n              ? `selected ${today}`\r\n              : `${today}`\r\n          }`}\r\n          key={day}\r\n          onClick={() => onDateClick(toDate(cloneDay))}\r\n        >\r\n          <span className='number'>{formattedDate}</span>\r\n          <span className='bg'>{/* {formattedDate} */}</span>\r\n        </div>\r\n      );\r\n      day = addDays(day, 1);\r\n    }\r\n    rows.push(\r\n      <div className='row' key={day}>\r\n        {days}\r\n      </div>\r\n    );\r\n    days = [];\r\n  }\r\n  return <div className='body'>{rows}</div>;\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    modal: state.modal,\r\n  };\r\n};\r\nconst mapDispatch = ({ modal: { setModalData, changeModalVisibility } }) => ({\r\n  setModalData: (data) => setModalData(data),\r\n  changeModalVisibility: () => changeModalVisibility(),\r\n});\r\n\r\nCells.propTypes = {\r\n  currentDate: PropTypes.object.isRequired,\r\n  selectedDate: PropTypes.object.isRequired,\r\n  setSelectedDate: PropTypes.func.isRequired,\r\n  changeModalVisibility: PropTypes.func.isRequired,\r\n  setModalData: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapState, mapDispatch)(Cells);\r\n","import React, { useState } from 'react';\r\n\r\nimport './calendar.css';\r\nimport Header from './components/header';\r\nimport DaysOfWeek from './components/daysOfWeek';\r\nimport Cells from './components/cells';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  return (\r\n    <div className='calendar'>\r\n      <div>\r\n        <Header {...{ setCurrentDate, currentDate }} />\r\n      </div>\r\n      <div>\r\n        <Cells {...{ currentDate, selectedDate, setSelectedDate }} />\r\n      </div>\r\n      <div>\r\n        <DaysOfWeek currentDate={currentDate} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\n\r\nimport { secondaryColour, Container } from '../styles';\r\nimport bg from '../../img/main_bg.jpg';\r\n\r\nconst SectionTwo = styled.div`\r\n  width: 705px;\r\n  min-width: 320px;\r\n  height: 100%;\r\n  display: flex;\r\n  padding-top: 200px;\r\n  justify-content: center;\r\n  background-color: #272829;\r\n  padding: 210px 0;\r\n  @media (max-width: 1250px) {\r\n    padding: 50px 0;\r\n    width: 100%;\r\n  }\r\n  & > .calendar {\r\n    max-width: 467px;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst Main = styled(Container)`\r\n  justify-content: flex-end;\r\n  background-image: url(${bg});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  @media (max-width: 1430px) {\r\n    background-size: cover;\r\n  }\r\n`;\r\nconst SectionOne = styled.div`\r\n  padding-top: 200px;\r\n  padding: 210px 0;\r\n  @media (max-width: 1250px) {\r\n    padding: 50px 0;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst Text = styled.div`\r\n  text-align: right;\r\n  padding-right: 30px;\r\n  h1 {\r\n    font-size: 50px;\r\n    letter-spacing: 3.5px;\r\n    line-height: 64px;\r\n    font-weight: 700;\r\n    color: ${secondaryColour};\r\n    text-transform: uppercase;\r\n    padding-bottom: 30px;\r\n  }\r\n  p {\r\n    font-size: 30px;\r\n    font-weight: 300;\r\n    line-height: 40px;\r\n    letter-spacing: 0.6px;\r\n    color: #dfdfdf;\r\n  }\r\n`;\r\nexport { SectionTwo, Main, SectionOne, Text };\r\n","import React, { lazy } from 'react';\r\n\r\nimport Layout from '../layout';\r\nimport Calendar from './calendar/index';\r\nimport { SectionTwo, Main, SectionOne, Text } from './styles';\r\n\r\nconst Modal = lazy(() => import('./modal'));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Main>\r\n        <SectionOne>\r\n          <Text>\r\n            <h1>\r\n              Choose the day <br /> for the meeting\r\n            </h1>\r\n            <p>\r\n              We encourage you to book your\r\n              <br /> appointment online.\r\n              <br /> This will save you time.\r\n            </p>\r\n          </Text>\r\n        </SectionOne>\r\n        <SectionTwo>\r\n          <Calendar />\r\n        </SectionTwo>\r\n      </Main>\r\n      <Modal />\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n"],"sourceRoot":""}